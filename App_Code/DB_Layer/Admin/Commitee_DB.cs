//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\Matta using Mcit Generator
// Class Name:		Commitee_DB
// Date Generated:	26-12-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Commitee_DB
    {

        #region "Private methods"

        private static Commitee_DT FillInfoObject(SqlDataReader dr)
        {

           Commitee_DT obj_Commitee_DT = new Commitee_DT();

           
		obj_Commitee_DT.ID = Convert.ToInt32(dr[Commitee_DT.Enum_Commitee_DT.ID.ToString()]);
		obj_Commitee_DT.Commitee_Title = dr[Commitee_DT.Enum_Commitee_DT.Commitee_Title.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Commitee_DT.Enum_Commitee_DT.Commitee_Title.ToString()]);
        obj_Commitee_DT.foundation_id = dr[Commitee_DT.Enum_Commitee_DT.foundation_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Commitee_DT.Enum_Commitee_DT.foundation_id.ToString()]);

           return obj_Commitee_DT;
        }

        private static SqlParameter[] GetParameters(Commitee_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[3];
           
			
        

        parms[0] = new SqlParameter(Commitee_DT.Enum_Commitee_DT.ID.ToString(), obj.ID);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Commitee_DT.Enum_Commitee_DT.Commitee_Title.ToString(), obj.Commitee_Title);
        parms[2] = new SqlParameter(Commitee_DT.Enum_Commitee_DT.foundation_id.ToString(),obj.foundation_id );
  
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Commitee_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Commitee_Save", parms);

             	    obj.ID = Convert.ToInt32(parms[0].Value) ; 

           return obj.ID ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Commitee_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Commitee_Delete", Commitee_ID);
                return Commitee_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll(int id,int foundation_id)
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Commitee_Select", 0,foundation_id ).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Commitee_DT SelectByID(int Commitee_ID,int found_id)
        {
            try
            {
              if (Commitee_ID > 0)
                {
                SqlDataReader drTableName;
                Commitee_DT oInfo_Commitee_DT = new Commitee_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Commitee_Select", Commitee_ID,found_id);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Commitee_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Commitee_DT;
               }
                else
                    return new Commitee_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

