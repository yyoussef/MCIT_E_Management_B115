//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\izibrahim using Mcit Generator
// Class Name:		Admin_ModulePage_DB
// Date Generated:	13-05-2013
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Admin_ModulePage_DB
    {

        #region "Private methods"

        private static Admin_ModulePage_DT FillInfoObject(SqlDataReader dr)
        {

           Admin_ModulePage_DT obj_Admin_ModulePage_DT = new Admin_ModulePage_DT();

           
		obj_Admin_ModulePage_DT.pk_ID = dr[Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.pk_ID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.pk_ID.ToString()]);
		obj_Admin_ModulePage_DT.fk_PageID = dr[Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.fk_PageID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.fk_PageID.ToString()]);
		obj_Admin_ModulePage_DT.fk_ModuleID = dr[Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.fk_ModuleID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.fk_ModuleID.ToString()]);

           return obj_Admin_ModulePage_DT;
        }

        private static SqlParameter[] GetParameters(Admin_ModulePage_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[3];
           
			

        parms[0] = new SqlParameter(Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.pk_ID.ToString(), obj.pk_ID);

        parms[1] = new SqlParameter(Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.fk_PageID.ToString(), obj.fk_PageID);

        parms[2] = new SqlParameter(Admin_ModulePage_DT.Enum_Admin_ModulePage_DT.fk_ModuleID.ToString(), obj.fk_ModuleID);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Admin_ModulePage_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Admin_ModulePage_Save", parms);

                return 1;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Admin_ModulePage_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Admin_ModulePage_Delete", Admin_ModulePage_ID);
                return Admin_ModulePage_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll(int Admin_ModulePage_ID)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "Admin_ModulePage_Select", Admin_ModulePage_ID).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Admin_ModulePage_DT SelectByID(int Admin_ModulePage_ID)
        {
            try
            {
              if (Admin_ModulePage_ID > 0)
                {
                SqlDataReader drTableName;
                Admin_ModulePage_DT oInfo_Admin_ModulePage_DT = new Admin_ModulePage_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Admin_ModulePage_Select", Admin_ModulePage_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Admin_ModulePage_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Admin_ModulePage_DT;
               }
                else
                    return new Admin_ModulePage_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

