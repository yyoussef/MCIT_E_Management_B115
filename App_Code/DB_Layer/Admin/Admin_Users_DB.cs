//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\MElshahed using Mcit Generator
// Class Name:		Admin_Users_DB
// Date Generated:	07-11-2013
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Admin_Users_DB
    {

        #region "Private methods"

        private static Admin_Users_DT FillInfoObject(SqlDataReader dr)
        {

           Admin_Users_DT obj_Admin_Users_DT = new Admin_Users_DT();

           
		obj_Admin_Users_DT.ID = Convert.ToInt32(dr[Admin_Users_DT.Enum_Admin_Users_DT.ID.ToString()]);
		obj_Admin_Users_DT.foundation_id = dr[Admin_Users_DT.Enum_Admin_Users_DT.foundation_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Admin_Users_DT.Enum_Admin_Users_DT.foundation_id.ToString()]);
		obj_Admin_Users_DT.Name = dr[Admin_Users_DT.Enum_Admin_Users_DT.Name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Admin_Users_DT.Enum_Admin_Users_DT.Name.ToString()]);
		obj_Admin_Users_DT.User_name = dr[Admin_Users_DT.Enum_Admin_Users_DT.User_name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Admin_Users_DT.Enum_Admin_Users_DT.User_name.ToString()]);
		obj_Admin_Users_DT.Password = dr[Admin_Users_DT.Enum_Admin_Users_DT.Password.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Admin_Users_DT.Enum_Admin_Users_DT.Password.ToString()]);
        obj_Admin_Users_DT.account_active = Convert.ToBoolean(dr[Admin_Users_DT.Enum_Admin_Users_DT.account_active.ToString()]);

           return obj_Admin_Users_DT;
        }

        private static SqlParameter[] GetParameters(Admin_Users_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[6];
           
			
        

        parms[0] = new SqlParameter(Admin_Users_DT.Enum_Admin_Users_DT.ID.ToString(), obj.ID);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Admin_Users_DT.Enum_Admin_Users_DT.foundation_id.ToString(), obj.foundation_id);

        parms[2] = new SqlParameter(Admin_Users_DT.Enum_Admin_Users_DT.Name.ToString(), obj.Name);

        parms[3] = new SqlParameter(Admin_Users_DT.Enum_Admin_Users_DT.User_name.ToString(), obj.User_name);

        parms[4] = new SqlParameter(Admin_Users_DT.Enum_Admin_Users_DT.Password.ToString(), obj.Password);
        parms[5] = new SqlParameter(Admin_Users_DT.Enum_Admin_Users_DT.account_active.ToString(), obj.account_active);   
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Admin_Users_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Admin_Users_Save", parms);

             	    obj.ID = Convert.ToInt32(parms[0].Value) ; 

           return obj.ID ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Admin_Users_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Admin_Users_Delete", Admin_Users_ID);
                return Admin_Users_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll( int id, int foundation_id)
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Admin_Users_Select", 0,foundation_id ).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Admin_Users_DT SelectByID(int ID,int found_id)
        {
            try
            {
              if (ID  > 0)
                {
                SqlDataReader drTableName;
                Admin_Users_DT oInfo_Admin_Users_DT = new Admin_Users_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Admin_Users_Select", ID,found_id );
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Admin_Users_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Admin_Users_DT;
               }
                else
                    return new Admin_Users_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

