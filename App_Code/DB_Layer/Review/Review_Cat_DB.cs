//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\tmeltaweel using Mcit Generator
// Class Name:		Review_Cat_DB
// Date Generated:	08-04-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Review_Cat_DB
    {

        #region "Private methods"

        private static Review_Cat_DT FillInfoObject(SqlDataReader dr)
        {

           Review_Cat_DT obj_Review_Cat_DT = new Review_Cat_DT();

           
		obj_Review_Cat_DT.FK_ReviewID = dr[Review_Cat_DT.Enum_Review_Cat_DT.FK_ReviewID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_Cat_DT.Enum_Review_Cat_DT.FK_ReviewID.ToString()]);
		obj_Review_Cat_DT.FK_CatID = dr[Review_Cat_DT.Enum_Review_Cat_DT.FK_CatID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_Cat_DT.Enum_Review_Cat_DT.FK_CatID.ToString()]);
		obj_Review_Cat_DT.CatType = dr[Review_Cat_DT.Enum_Review_Cat_DT.CatType.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_Cat_DT.Enum_Review_Cat_DT.CatType.ToString()]);

           return obj_Review_Cat_DT;
        }

        private static SqlParameter[] GetParameters(Review_Cat_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[3];
           
			

        parms[0] = new SqlParameter(Review_Cat_DT.Enum_Review_Cat_DT.FK_ReviewID.ToString(), obj.FK_ReviewID);

        parms[1] = new SqlParameter(Review_Cat_DT.Enum_Review_Cat_DT.FK_CatID.ToString(), obj.FK_CatID);

        parms[2] = new SqlParameter(Review_Cat_DT.Enum_Review_Cat_DT.CatType.ToString(), obj.CatType);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static void Save(Review_Cat_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Review_Cat_Save", parms);

             	    
            }
            catch (Exception ex)
            {

                //return -1;
            }
        }

        public static int Delete(int Review_Cat_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Review_Cat_Delete", Review_Cat_ID);
                return Review_Cat_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Review_Cat_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Review_Cat_DT SelectByID(int Review_Cat_ID)
        {
            try
            {
              if (Review_Cat_ID > 0)
                {
                SqlDataReader drTableName;
                Review_Cat_DT oInfo_Review_Cat_DT = new Review_Cat_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Review_Cat_Select", Review_Cat_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Review_Cat_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Review_Cat_DT;
               }
                else
                    return new Review_Cat_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

