//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\tmeltaweel using Mcit Generator
// Class Name:		Review_Files_DB
// Date Generated:	08-04-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Review_Files_DB
    {

        #region "Private methods"

        private static Review_Files_DT FillInfoObject(SqlDataReader dr)
        {

           Review_Files_DT obj_Review_Files_DT = new Review_Files_DT();

           
		obj_Review_Files_DT.Review_File_ID = Convert.ToInt32(dr[Review_Files_DT.Enum_Review_Files_DT.Review_File_ID.ToString()]);
		obj_Review_Files_DT.Review_ID = dr[Review_Files_DT.Enum_Review_Files_DT.Review_ID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_Files_DT.Enum_Review_Files_DT.Review_ID.ToString()]);
		obj_Review_Files_DT.Original_Or_Attached = dr[Review_Files_DT.Enum_Review_Files_DT.Original_Or_Attached.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_Files_DT.Enum_Review_Files_DT.Original_Or_Attached.ToString()]);
		//obj_Review_Files_DT.File_data = dr[Review_Files_DT.Enum_Review_Files_DT.File_data.ToString()] == DBNull.Value ? null : Convert.ToByte[](dr[Review_Files_DT.Enum_Review_Files_DT.File_data.ToString()]);
		obj_Review_Files_DT.File_name = dr[Review_Files_DT.Enum_Review_Files_DT.File_name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Review_Files_DT.Enum_Review_Files_DT.File_name.ToString()]);
		obj_Review_Files_DT.File_ext = dr[Review_Files_DT.Enum_Review_Files_DT.File_ext.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Review_Files_DT.Enum_Review_Files_DT.File_ext.ToString()]);

           return obj_Review_Files_DT;
        }

        private static SqlParameter[] GetParameters(Review_Files_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[6];
           
			
        

        parms[0] = new SqlParameter(Review_Files_DT.Enum_Review_Files_DT.Review_File_ID.ToString(), obj.Review_File_ID);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Review_Files_DT.Enum_Review_Files_DT.Review_ID.ToString(), obj.Review_ID);

        parms[2] = new SqlParameter(Review_Files_DT.Enum_Review_Files_DT.Original_Or_Attached.ToString(), obj.Original_Or_Attached);

        parms[3] = new SqlParameter(Review_Files_DT.Enum_Review_Files_DT.File_data.ToString(), obj.File_data);

        parms[4] = new SqlParameter(Review_Files_DT.Enum_Review_Files_DT.File_name.ToString(), obj.File_name);

        parms[5] = new SqlParameter(Review_Files_DT.Enum_Review_Files_DT.File_ext.ToString(), obj.File_ext);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Review_Files_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Review_Files_Save", parms);

             	    obj.Review_File_ID = Convert.ToInt32(parms[0].Value) ; 

           return obj.Review_File_ID ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Review_Files_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Review_Files_Delete", Review_Files_ID);
                return Review_Files_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Review_Files_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Review_Files_DT SelectByID(int Review_Files_ID)
        {
            try
            {
              if (Review_Files_ID > 0)
                {
                SqlDataReader drTableName;
                Review_Files_DT oInfo_Review_Files_DT = new Review_Files_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Review_Files_Select", Review_Files_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Review_Files_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Review_Files_DT;
               }
                else
                    return new Review_Files_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

