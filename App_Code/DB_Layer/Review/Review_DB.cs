//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\tmeltaweel using Mcit Generator
// Class Name:		Review_DB
// Date Generated:	08-04-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Review_DB
    {

        #region "Private methods"

        private static Review_DT FillInfoObject(SqlDataReader dr)
        {

           Review_DT obj_Review_DT = new Review_DT();

           
		obj_Review_DT.ID = Convert.ToInt32(dr[Review_DT.Enum_Review_DT.ID.ToString()]);
		
		obj_Review_DT.Dept_Dept_ID = dr[Review_DT.Enum_Review_DT.Dept_Dept_ID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_DT.Enum_Review_DT.Dept_Dept_ID.ToString()]);
		obj_Review_DT.Group_id = dr[Review_DT.Enum_Review_DT.Group_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_DT.Enum_Review_DT.Group_id.ToString()]);
		obj_Review_DT.pmp_pmp_id = dr[Review_DT.Enum_Review_DT.pmp_pmp_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Review_DT.Enum_Review_DT.pmp_pmp_id.ToString()]);
		
		obj_Review_DT.Subject = dr[Review_DT.Enum_Review_DT.Subject.ToString()] == DBNull.Value ? null : Convert.ToString(dr[Review_DT.Enum_Review_DT.Subject.ToString()]);
		obj_Review_DT.Notes = dr[Review_DT.Enum_Review_DT.Notes.ToString()] == DBNull.Value ? null : Convert.ToString(dr[Review_DT.Enum_Review_DT.Notes.ToString()]);
		
		obj_Review_DT.Code = dr[Review_DT.Enum_Review_DT.Code.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Review_DT.Enum_Review_DT.Code.ToString()]);
		obj_Review_DT.Date = dr[Review_DT.Enum_Review_DT.Date.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Review_DT.Enum_Review_DT.Date.ToString()]);
		obj_Review_DT.Enter_Date = dr[Review_DT.Enum_Review_DT.Enter_Date.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Review_DT.Enum_Review_DT.Enter_Date.ToString()]);

           return obj_Review_DT;
        }

        private static SqlParameter[] GetParameters(Review_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[9];
           
			
        

        parms[0] = new SqlParameter(Review_DT.Enum_Review_DT.ID.ToString(), obj.ID);
        parms[0].Direction = ParameterDirection.InputOutput;

        

        parms[1] = new SqlParameter(Review_DT.Enum_Review_DT.Dept_Dept_ID.ToString(), obj.Dept_Dept_ID);

        parms[2] = new SqlParameter(Review_DT.Enum_Review_DT.Group_id.ToString(), obj.Group_id);

        parms[3] = new SqlParameter(Review_DT.Enum_Review_DT.pmp_pmp_id.ToString(), obj.pmp_pmp_id);

 

        parms[4] = new SqlParameter(Review_DT.Enum_Review_DT.Subject.ToString(), obj.Subject);

        parms[5] = new SqlParameter(Review_DT.Enum_Review_DT.Notes.ToString(), obj.Notes);

 

        parms[6] = new SqlParameter(Review_DT.Enum_Review_DT.Code.ToString(), obj.Code);

        parms[7] = new SqlParameter(Review_DT.Enum_Review_DT.Date.ToString(), obj.Date);

        parms[8] = new SqlParameter(Review_DT.Enum_Review_DT.Enter_Date.ToString(), obj.Enter_Date);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Review_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Review_Save", parms);

             	    obj.ID = Convert.ToInt32(parms[0].Value) ; 

           return obj.ID ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Review_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Review_Delete", Review_ID);
                return Review_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Review_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Review_DT SelectByID(int Review_ID)
        {
            try
            {
              if (Review_ID > 0)
                {
                SqlDataReader drTableName;
                Review_DT oInfo_Review_DT = new Review_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Review_Select", Review_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Review_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Review_DT;
               }
                else
                    return new Review_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static void update_Review_Track_Emp(string Review_id, string Emp_ID, int Review_Status, int Type)
        {
            DataTable DT = General_Helping.GetDataTable("select * from Review_Track_Emp where Review_id = " + Review_id + " and Emp_ID =" + Emp_ID);
            if (DT.Rows.Count > 0)
            {

                string sql = "update Review_Track_Emp set Review_Status= " + Review_Status + " where Review_id =" + Review_id + " and Emp_ID =" + Emp_ID;
                General_Helping.ExcuteQuery(sql);
            }
            else
            {
                string sql = "insert into Review_Track_Emp (Review_id,Emp_ID,Review_Status,Type_Track_emp) values ( " + Review_id + "," + Emp_ID + "," + Review_Status + "," + "1" + ")";
                General_Helping.ExcuteQuery(sql);
            }

        }
	#endregion


    }

