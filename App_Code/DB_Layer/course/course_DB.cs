//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\MElshahed using Mcit Generator
// Class Name:		course_DB
// Date Generated:	02-08-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class course_DB
    {

        #region "Private methods"

        private static course_DT FillInfoObject(SqlDataReader dr)
        {

           course_DT obj_course_DT = new course_DT();

           
		obj_course_DT.id = Convert.ToInt32(dr[course_DT.Enum_course_DT.id.ToString()]);
		obj_course_DT.course_id = dr[course_DT.Enum_course_DT.course_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.course_id.ToString()]);
		obj_course_DT.course_place = dr[course_DT.Enum_course_DT.course_place.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.course_place.ToString()]);
		obj_course_DT.emp_no = dr[course_DT.Enum_course_DT.emp_no.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.emp_no.ToString()]);
		obj_course_DT.created_by = dr[course_DT.Enum_course_DT.created_by.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.created_by.ToString()]);
		obj_course_DT.duration = dr[course_DT.Enum_course_DT.duration.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.duration.ToString()]);
		obj_course_DT.refrences = dr[course_DT.Enum_course_DT.refrences.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.refrences.ToString()]);
		obj_course_DT.inbox_id = dr[course_DT.Enum_course_DT.inbox_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.inbox_id.ToString()]);
		obj_course_DT.prog_id = dr[course_DT.Enum_course_DT.prog_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.prog_id.ToString()]);
		obj_course_DT.track_id = dr[course_DT.Enum_course_DT.track_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[course_DT.Enum_course_DT.track_id.ToString()]);
		obj_course_DT.course_cost = dr[course_DT.Enum_course_DT.course_cost.ToString()] == DBNull.Value ? 0 : Convert.ToDecimal(dr[course_DT.Enum_course_DT.course_cost.ToString()]);
		obj_course_DT.last_register_date = dr[course_DT.Enum_course_DT.last_register_date.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[course_DT.Enum_course_DT.last_register_date.ToString()]);
		obj_course_DT.organization = dr[course_DT.Enum_course_DT.organization.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[course_DT.Enum_course_DT.organization.ToString()]);
		obj_course_DT.comments = dr[course_DT.Enum_course_DT.comments.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[course_DT.Enum_course_DT.comments.ToString()]);
		obj_course_DT.candidate_criteria = dr[course_DT.Enum_course_DT.candidate_criteria.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[course_DT.Enum_course_DT.candidate_criteria.ToString()]);
		obj_course_DT.refrance_file = dr[course_DT.Enum_course_DT.refrance_file.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[course_DT.Enum_course_DT.refrance_file.ToString()]);
		obj_course_DT.start_date = dr[course_DT.Enum_course_DT.start_date.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[course_DT.Enum_course_DT.start_date.ToString()]);
		obj_course_DT.end_date = dr[course_DT.Enum_course_DT.end_date.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[course_DT.Enum_course_DT.end_date.ToString()]);

           return obj_course_DT;
        }

        private static SqlParameter[] GetParameters(course_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[18];
           
			
        

        parms[0] = new SqlParameter(course_DT.Enum_course_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(course_DT.Enum_course_DT.course_id.ToString(), obj.course_id);

        parms[2] = new SqlParameter(course_DT.Enum_course_DT.course_place.ToString(), obj.course_place);

        parms[3] = new SqlParameter(course_DT.Enum_course_DT.emp_no.ToString(), obj.emp_no);

        parms[4] = new SqlParameter(course_DT.Enum_course_DT.created_by.ToString(), obj.created_by);

        parms[5] = new SqlParameter(course_DT.Enum_course_DT.duration.ToString(), obj.duration);

        parms[6] = new SqlParameter(course_DT.Enum_course_DT.refrences.ToString(), obj.refrences);

        parms[7] = new SqlParameter(course_DT.Enum_course_DT.inbox_id.ToString(), obj.inbox_id);

        parms[8] = new SqlParameter(course_DT.Enum_course_DT.prog_id.ToString(), obj.prog_id);

        parms[9] = new SqlParameter(course_DT.Enum_course_DT.track_id.ToString(), obj.track_id);

        parms[10] = new SqlParameter(course_DT.Enum_course_DT.course_cost.ToString(), obj.course_cost);

        parms[11] = new SqlParameter(course_DT.Enum_course_DT.last_register_date.ToString(), obj.last_register_date);

        parms[12] = new SqlParameter(course_DT.Enum_course_DT.organization.ToString(), obj.organization);

        parms[13] = new SqlParameter(course_DT.Enum_course_DT.comments.ToString(), obj.comments);

        parms[14] = new SqlParameter(course_DT.Enum_course_DT.candidate_criteria.ToString(), obj.candidate_criteria);

        parms[15] = new SqlParameter(course_DT.Enum_course_DT.refrance_file.ToString(), obj.refrance_file);

        parms[16] = new SqlParameter(course_DT.Enum_course_DT.start_date.ToString(), obj.start_date);

        parms[17] = new SqlParameter(course_DT.Enum_course_DT.end_date.ToString(), obj.end_date);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(course_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "course_Save", parms);

             	    obj.id = Convert.ToInt32(parms[0].Value) ; 

           return obj.id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int course_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "course_Delete", course_ID);
                return course_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll(int id, int course_ID)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "course_Select", id, course_ID).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static DataTable SelectAll_Cource_Not_Registered(int empID)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "Course_SelectEmployeeNewCourse", empID).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static DataTable Select_Courses_Emlployee_Manager(int Pmp_id, string status)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "course_mng_Select", Pmp_id, status).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static DataTable Select_Courses_Emlployee_EX_Manager(int Pmp_id)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "course_mng_EX_Select", Pmp_id).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static course_DT SelectByID(int id,int course_ID)
        {
            try
            {
              if (course_ID > 0)
                {
                SqlDataReader drTableName;
                course_DT oInfo_course_DT = new course_DT( );

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "course_Select", id, course_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_course_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_course_DT;
               }
                else
                    return new course_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static course_DT course_Select_details(int id)
        {
            try
            {
                if (id > 0)
                {
                    SqlDataReader drTableName;
                    course_DT oInfo_course_DT = new course_DT();

                    drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "course_Select_details", id);
                    if (drTableName != null)
                    {
                        while (drTableName.Read())
                        {
                            oInfo_course_DT = FillInfoObject(drTableName);
                        }

                        drTableName.Close();
                    }
                    return oInfo_course_DT;
                }
                else
                    return new course_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }


	#endregion


    }

