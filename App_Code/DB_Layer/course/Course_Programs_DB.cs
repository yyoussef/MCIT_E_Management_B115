//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\MElshahed using Mcit Generator
// Class Name:		Course_Programs_DB
// Date Generated:	24-07-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Course_Programs_DB
    {

        #region "Private methods"

        private static Course_Programs_DT FillInfoObject(SqlDataReader dr)
        {

           Course_Programs_DT obj_Course_Programs_DT = new Course_Programs_DT();

           
		obj_Course_Programs_DT.prog_id = Convert.ToInt32(dr[Course_Programs_DT.Enum_Course_Programs_DT.prog_id.ToString()]);
		obj_Course_Programs_DT.prog_name = dr[Course_Programs_DT.Enum_Course_Programs_DT.prog_name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Course_Programs_DT.Enum_Course_Programs_DT.prog_name.ToString()]);

           return obj_Course_Programs_DT;
        }

        private static SqlParameter[] GetParameters(Course_Programs_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[2];
           
			
        

        parms[0] = new SqlParameter(Course_Programs_DT.Enum_Course_Programs_DT.prog_id.ToString(), obj.prog_id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Course_Programs_DT.Enum_Course_Programs_DT.prog_name.ToString(), obj.prog_name);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Course_Programs_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Course_Programs_Save", parms);

             	    obj.prog_id = Convert.ToInt32(parms[0].Value) ; 

           return obj.prog_id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Course_Programs_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Course_Programs_Delete", Course_Programs_ID);
                return Course_Programs_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Course_Programs_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Course_Programs_DT SelectByID(int Course_Programs_ID)
        {
            try
            {
              if (Course_Programs_ID > 0)
                {
                SqlDataReader drTableName;
                Course_Programs_DT oInfo_Course_Programs_DT = new Course_Programs_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Course_Programs_Select", Course_Programs_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Course_Programs_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Course_Programs_DT;
               }
                else
                    return new Course_Programs_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

