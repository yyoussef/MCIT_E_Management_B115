//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\MElshahed using Mcit Generator
// Class Name:		Training_Plan_DB
// Date Generated:	23-11-2014
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Training_Plan_DB
    {

        #region "Private methods"

        private static Training_Plan_DT FillInfoObject(SqlDataReader dr)
        {

           Training_Plan_DT obj_Training_Plan_DT = new Training_Plan_DT();

           
		obj_Training_Plan_DT.id = Convert.ToInt32(dr[Training_Plan_DT.Enum_Training_Plan_DT.id.ToString()]);
		obj_Training_Plan_DT.course_id = dr[Training_Plan_DT.Enum_Training_Plan_DT.course_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Training_Plan_DT.Enum_Training_Plan_DT.course_id.ToString()]);
		obj_Training_Plan_DT.emp_id = dr[Training_Plan_DT.Enum_Training_Plan_DT.emp_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Training_Plan_DT.Enum_Training_Plan_DT.emp_id.ToString()]);
		obj_Training_Plan_DT.isapproved = dr[Training_Plan_DT.Enum_Training_Plan_DT.isapproved.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Training_Plan_DT.Enum_Training_Plan_DT.isapproved.ToString()]);

           return obj_Training_Plan_DT;
        }

        private static SqlParameter[] GetParameters(Training_Plan_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[4];
           
			
        

        parms[0] = new SqlParameter(Training_Plan_DT.Enum_Training_Plan_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Training_Plan_DT.Enum_Training_Plan_DT.course_id.ToString(), obj.course_id);

        parms[2] = new SqlParameter(Training_Plan_DT.Enum_Training_Plan_DT.emp_id.ToString(), obj.emp_id);

        parms[3] = new SqlParameter(Training_Plan_DT.Enum_Training_Plan_DT.isapproved.ToString(), obj.isapproved);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Training_Plan_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Training_Plan_Save", parms);

             	    obj.id = Convert.ToInt32(parms[0].Value) ; 

           return obj.id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Training_Plan_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Training_Plan_Delete", Training_Plan_ID);
                return Training_Plan_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Training_Plan_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Training_Plan_DT SelectByID(int Training_Plan_ID)
        {
            try
            {
              if (Training_Plan_ID > 0)
                {
                SqlDataReader drTableName;
                Training_Plan_DT oInfo_Training_Plan_DT = new Training_Plan_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Training_Plan_Select", Training_Plan_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Training_Plan_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Training_Plan_DT;
               }
                else
                    return new Training_Plan_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static int training_plan_save(int id ,int course_id, int emp_id,int isapproved)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Training_Plan_Save",0,course_id, emp_id,isapproved);
                return 1;
            }
            catch (Exception ex)
            {
                return -1;
            }
        }

        public static DataTable Training_Plan_course_select(int emp_id)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "Training_Plan_course_select",emp_id ).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static DataTable Training_Plan_apprevedcourse_select(int emp_id)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "Training_Plan_apprevedcourse_select", emp_id).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static DataTable Training_Plan_mangerselect(int emp_id)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "Training_Plan_mangerselect", emp_id).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }

	#endregion


    }

