//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\MElshahed using Mcit Generator
// Class Name:		Course_Places_DB
// Date Generated:	25-07-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Course_Places_DB
    {

        #region "Private methods"

        private static Course_Places_DT FillInfoObject(SqlDataReader dr)
        {

           Course_Places_DT obj_Course_Places_DT = new Course_Places_DT();

           
		obj_Course_Places_DT.place_id = Convert.ToInt32(dr[Course_Places_DT.Enum_Course_Places_DT.place_id.ToString()]);
		obj_Course_Places_DT.place_desc = dr[Course_Places_DT.Enum_Course_Places_DT.place_desc.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Course_Places_DT.Enum_Course_Places_DT.place_desc.ToString()]);

           return obj_Course_Places_DT;
        }

        private static SqlParameter[] GetParameters(Course_Places_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[2];
           
			
        

        parms[0] = new SqlParameter(Course_Places_DT.Enum_Course_Places_DT.place_id.ToString(), obj.place_id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Course_Places_DT.Enum_Course_Places_DT.place_desc.ToString(), obj.place_desc);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Course_Places_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Course_Places_Save", parms);

             	    obj.place_id = Convert.ToInt32(parms[0].Value) ; 

           return obj.place_id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Course_Places_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Course_Places_Delete", Course_Places_ID);
                return Course_Places_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Course_Places_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Course_Places_DT SelectByID(int Course_Places_ID)
        {
            try
            {
              if (Course_Places_ID > 0)
                {
                SqlDataReader drTableName;
                Course_Places_DT oInfo_Course_Places_DT = new Course_Places_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Course_Places_Select", Course_Places_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Course_Places_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Course_Places_DT;
               }
                else
                    return new Course_Places_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

