//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\nmghaith using Mcit Generator
// Class Name:		Employee_Experience_DB
// Date Generated:	25-03-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


public static class Employee_Experience_DB
{

        #region "Private methods"

        private static Employee_Experience_DT FillInfoObject(SqlDataReader dr)
        {

           Employee_Experience_DT obj_Employee_Experience_DT = new Employee_Experience_DT();

           
		obj_Employee_Experience_DT.id = Convert.ToInt32(dr[Employee_Experience_DT.Enum_Employee_Experience_DT.id.ToString()]);
		obj_Employee_Experience_DT.pmp_id = dr[Employee_Experience_DT.Enum_Employee_Experience_DT.pmp_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Employee_Experience_DT.Enum_Employee_Experience_DT.pmp_id.ToString()]);
		obj_Employee_Experience_DT.organization = dr[Employee_Experience_DT.Enum_Employee_Experience_DT.organization.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Employee_Experience_DT.Enum_Employee_Experience_DT.organization.ToString()]);
		obj_Employee_Experience_DT.job_title = dr[Employee_Experience_DT.Enum_Employee_Experience_DT.job_title.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Employee_Experience_DT.Enum_Employee_Experience_DT.job_title.ToString()]);
		obj_Employee_Experience_DT.desc = dr[Employee_Experience_DT.Enum_Employee_Experience_DT.desc.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Employee_Experience_DT.Enum_Employee_Experience_DT.desc.ToString()]);
		obj_Employee_Experience_DT.FromDate = dr[Employee_Experience_DT.Enum_Employee_Experience_DT.FromDate.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Employee_Experience_DT.Enum_Employee_Experience_DT.FromDate.ToString()]);
		obj_Employee_Experience_DT.ToDate = dr[Employee_Experience_DT.Enum_Employee_Experience_DT.ToDate.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Employee_Experience_DT.Enum_Employee_Experience_DT.ToDate.ToString()]);

           return obj_Employee_Experience_DT;
        }

        private static SqlParameter[] GetParameters(Employee_Experience_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[7];
           
			
        

        parms[0] = new SqlParameter(Employee_Experience_DT.Enum_Employee_Experience_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Employee_Experience_DT.Enum_Employee_Experience_DT.pmp_id.ToString(), obj.pmp_id);

        parms[2] = new SqlParameter(Employee_Experience_DT.Enum_Employee_Experience_DT.organization.ToString(), obj.organization);

        parms[3] = new SqlParameter(Employee_Experience_DT.Enum_Employee_Experience_DT.job_title.ToString(), obj.job_title);

        parms[4] = new SqlParameter(Employee_Experience_DT.Enum_Employee_Experience_DT.desc.ToString(), obj.desc);

        parms[5] = new SqlParameter(Employee_Experience_DT.Enum_Employee_Experience_DT.FromDate.ToString(), obj.FromDate);

        parms[6] = new SqlParameter(Employee_Experience_DT.Enum_Employee_Experience_DT.ToDate.ToString(), obj.ToDate);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Employee_Experience_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Employee_Experience_Save", parms);

             	    obj.id = Convert.ToInt32(parms[0].Value) ; 

           return obj.id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Employee_Experience_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Employee_Experience_Delete", Employee_Experience_ID);
                return Employee_Experience_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Employee_Experience_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Employee_Experience_DT SelectByID(int Employee_Experience_ID)
        {
            try
            {
              if (Employee_Experience_ID > 0)
                {
                SqlDataReader drTableName;
                Employee_Experience_DT oInfo_Employee_Experience_DT = new Employee_Experience_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Employee_Experience_Select", Employee_Experience_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Employee_Experience_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Employee_Experience_DT;
               }
                else
                    return new Employee_Experience_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }



    public static DataTable SelectBypmp_id(int pmp_id)
    {

        try
        {
            return SqlHelper.ExecuteDataset(Database.ConnectionString, "Employee_Experience_Select_by_pmp_id", pmp_id).Tables[0];

        }
        catch (Exception ex)
        {

            return null;
        }




    }
}
           
        
	#endregion


 

