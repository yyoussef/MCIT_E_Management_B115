//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\malmeligi using Mcit Generator
// Class Name:		Organization_DB
// Date Generated:	17-07-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Organization_DB
    {

        #region "Private methods"

        private static Organization_DT FillInfoObject(SqlDataReader dr)
        {

           Organization_DT obj_Organization_DT = new Organization_DT();

           
		obj_Organization_DT.New_ID = dr[Organization_DT.Enum_Organization_DT.New_ID.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Organization_DT.Enum_Organization_DT.New_ID.ToString()]);
		obj_Organization_DT.Org_ID = Convert.ToInt32(dr[Organization_DT.Enum_Organization_DT.Org_ID.ToString()]);
		obj_Organization_DT.Org_Desc = dr[Organization_DT.Enum_Organization_DT.Org_Desc.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Organization_DT.Enum_Organization_DT.Org_Desc.ToString()]);
        obj_Organization_DT.foundation_id= dr[Organization_DT.Enum_Organization_DT.foundation_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Organization_DT.Enum_Organization_DT.foundation_id.ToString()]);

           return obj_Organization_DT;
        }

        private static SqlParameter[] GetParameters(Organization_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[4];
           
			

        parms[0] = new SqlParameter(Organization_DT.Enum_Organization_DT.New_ID.ToString(), obj.New_ID);
        

        parms[1] = new SqlParameter(Organization_DT.Enum_Organization_DT.Org_ID.ToString(), obj.Org_ID);
        parms[1].Direction = ParameterDirection.InputOutput;

        parms[2] = new SqlParameter(Organization_DT.Enum_Organization_DT.Org_Desc.ToString(), obj.Org_Desc);

        parms[3] = new SqlParameter(Organization_DT.Enum_Organization_DT.foundation_id.ToString(), obj.foundation_id);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Organization_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Organization_Save", parms);

             	    obj.Org_ID = Convert.ToInt32(parms[1].Value) ; 

           return obj.Org_ID ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Organization_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Organization_Delete", Organization_ID);
                return Organization_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }
        public static DataTable orgbyname(string part_name,int found_id)
        {

            return SqlHelper.ExecuteDataset(Database.ConnectionString, "Org_byname", part_name,found_id).Tables[0];

        }
        public static DataTable SelectAll(int found_id)
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Organization_Select", 0,found_id).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Organization_DT SelectByID(int Organization_ID)
        {
            try
            {
              if (Organization_ID > 0)
                {
                SqlDataReader drTableName;
                Organization_DT oInfo_Organization_DT = new Organization_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Organization_Select", Organization_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Organization_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Organization_DT;
               }
                else
                    return new Organization_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
        public static Organization_DT SelectByName(string OrgName , int found_id)
        {
            try
            {

                SqlDataReader drTableName;
                Organization_DT oInfo_Organization_DT = new Organization_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "OrgSelectByName", OrgName,found_id);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Organization_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Organization_DT;

            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

