//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\MElshahed using Mcit Generator
// Class Name:		Evaluation_Main_Items_Manager_DB
// Date Generated:	08-10-2013
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Evaluation_Main_Items_Manager_DB
    {

        #region "Private methods"

        private static Evaluation_Main_Items_Manager_DT FillInfoObject(SqlDataReader dr)
        {

           Evaluation_Main_Items_Manager_DT obj_Evaluation_Main_Items_Manager_DT = new Evaluation_Main_Items_Manager_DT();

           
		obj_Evaluation_Main_Items_Manager_DT.Main_Item_Id = Convert.ToInt32(dr[Evaluation_Main_Items_Manager_DT.Enum_Evaluation_Main_Items_Manager_DT.Main_Item_Id.ToString()]);
		obj_Evaluation_Main_Items_Manager_DT.Name = dr[Evaluation_Main_Items_Manager_DT.Enum_Evaluation_Main_Items_Manager_DT.Name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Evaluation_Main_Items_Manager_DT.Enum_Evaluation_Main_Items_Manager_DT.Name.ToString()]);

           return obj_Evaluation_Main_Items_Manager_DT;
        }

        private static SqlParameter[] GetParameters(Evaluation_Main_Items_Manager_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[2];
           
			
        

        parms[0] = new SqlParameter(Evaluation_Main_Items_Manager_DT.Enum_Evaluation_Main_Items_Manager_DT.Main_Item_Id.ToString(), obj.Main_Item_Id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Evaluation_Main_Items_Manager_DT.Enum_Evaluation_Main_Items_Manager_DT.Name.ToString(), obj.Name);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Evaluation_Main_Items_Manager_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Evaluation_Main_Items_Manager_Save", parms);

             	    obj.Main_Item_Id = Convert.ToInt32(parms[0].Value) ; 

           return obj.Main_Item_Id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Evaluation_Main_Items_Manager_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Evaluation_Main_Items_Manager_Delete", Evaluation_Main_Items_Manager_ID);
                return Evaluation_Main_Items_Manager_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "Evaluation_Main_Items_Manager_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Evaluation_Main_Items_Manager_DT SelectByID(int Evaluation_Main_Items_Manager_ID)
        {
            try
            {
              if (Evaluation_Main_Items_Manager_ID > 0)
                {
                SqlDataReader drTableName;
                Evaluation_Main_Items_Manager_DT oInfo_Evaluation_Main_Items_Manager_DT = new Evaluation_Main_Items_Manager_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Evaluation_Main_Items_Manager_Select", Evaluation_Main_Items_Manager_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Evaluation_Main_Items_Manager_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Evaluation_Main_Items_Manager_DT;
               }
                else
                    return new Evaluation_Main_Items_Manager_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

