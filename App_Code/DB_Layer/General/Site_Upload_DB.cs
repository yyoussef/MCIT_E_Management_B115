//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	PC\MCIT using Mcit Generator
// Class Name:		Site_Upload_DB
// Date Generated:	30-09-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class Site_Upload_DB
    {

        #region "Private methods"

        private static Site_Upload_DT FillInfoObject(SqlDataReader dr)
        {

           Site_Upload_DT obj_Site_Upload_DT = new Site_Upload_DT();

           
		obj_Site_Upload_DT.ID = Convert.ToInt32(dr[Site_Upload_DT.Enum_Site_Upload_DT.ID.ToString()]);
		obj_Site_Upload_DT.Site_Name = dr[Site_Upload_DT.Enum_Site_Upload_DT.Site_Name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Site_Upload_DT.Enum_Site_Upload_DT.Site_Name.ToString()]);
		obj_Site_Upload_DT.File_Name = dr[Site_Upload_DT.Enum_Site_Upload_DT.File_Name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Site_Upload_DT.Enum_Site_Upload_DT.File_Name.ToString()]);
		obj_Site_Upload_DT.File_Ext = dr[Site_Upload_DT.Enum_Site_Upload_DT.File_Ext.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Site_Upload_DT.Enum_Site_Upload_DT.File_Ext.ToString()]);
        obj_Site_Upload_DT.logo_file_name = dr[Site_Upload_DT.Enum_Site_Upload_DT.logo_file_name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Site_Upload_DT.Enum_Site_Upload_DT.logo_file_name.ToString()]);
        obj_Site_Upload_DT.logo_file_Ext = dr[Site_Upload_DT.Enum_Site_Upload_DT.logo_file_Ext.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[Site_Upload_DT.Enum_Site_Upload_DT.logo_file_Ext.ToString()]);
        obj_Site_Upload_DT.e_signature = dr[Site_Upload_DT.Enum_Site_Upload_DT.e_signature.ToString()] == DBNull.Value ? null : Convert.ToString(dr[Site_Upload_DT.Enum_Site_Upload_DT.e_signature.ToString()]);
        obj_Site_Upload_DT.foundation_id = dr[Site_Upload_DT.Enum_Site_Upload_DT.foundation_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[Site_Upload_DT.Enum_Site_Upload_DT.foundation_id.ToString()]);
           return obj_Site_Upload_DT;
        }

        private static SqlParameter[] GetParameters(Site_Upload_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[9];
           
			
        

        parms[0] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.ID.ToString(), obj.ID);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.Site_Name.ToString(), obj.Site_Name);

        parms[2] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.File_Name.ToString(), obj.File_Name);

        parms[3] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.File_Ext.ToString(), obj.File_Ext);

        parms[4] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.logo_file_name.ToString(), obj.logo_file_name);

        parms[5] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.logo_file_Ext.ToString(), obj.logo_file_Ext);

        parms[6] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.logo_image.ToString(), obj.logo_image);
        parms[6].SqlDbType = SqlDbType.Binary;

        parms[7] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.e_signature.ToString(), obj.e_signature);

        parms[8] = new SqlParameter(Site_Upload_DT.Enum_Site_Upload_DT.foundation_id.ToString(), obj.foundation_id);            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(Site_Upload_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "Site_Upload_Save", parms);

             	    obj.ID = Convert.ToInt32(parms[0].Value) ; 

           return obj.ID ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int Site_Upload_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "Site_Upload_Delete", Site_Upload_ID);
                return Site_Upload_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll(int found_id)
        {
            try 
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "Site_Upload_Select", 0,found_id).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static Site_Upload_DT SelectByID(int Site_Upload_ID)
        {
            try
            {
              if (Site_Upload_ID > 0)
                {
                SqlDataReader drTableName;
                Site_Upload_DT oInfo_Site_Upload_DT = new Site_Upload_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "Site_Upload_Select", Site_Upload_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_Site_Upload_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_Site_Upload_DT;
               }
                else
                    return new Site_Upload_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

