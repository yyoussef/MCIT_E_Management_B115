//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\MElshahed using Mcit Generator
// Class Name:		File_Archive_Status_DB
// Date Generated:	20-09-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class File_Archive_Status_DB
    {

        #region "Private methods"

        private static File_Archive_Status_DT FillInfoObject(SqlDataReader dr)
        {

           File_Archive_Status_DT obj_File_Archive_Status_DT = new File_Archive_Status_DT();

           
		obj_File_Archive_Status_DT.id = Convert.ToInt32(dr[File_Archive_Status_DT.Enum_File_Archive_Status_DT.id.ToString()]);
		obj_File_Archive_Status_DT.pmp_id = dr[File_Archive_Status_DT.Enum_File_Archive_Status_DT.pmp_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[File_Archive_Status_DT.Enum_File_Archive_Status_DT.pmp_id.ToString()]);
		obj_File_Archive_Status_DT.file_id = dr[File_Archive_Status_DT.Enum_File_Archive_Status_DT.file_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[File_Archive_Status_DT.Enum_File_Archive_Status_DT.file_id.ToString()]);
		obj_File_Archive_Status_DT.status = dr[File_Archive_Status_DT.Enum_File_Archive_Status_DT.status.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[File_Archive_Status_DT.Enum_File_Archive_Status_DT.status.ToString()]);

           return obj_File_Archive_Status_DT;
        }

        private static SqlParameter[] GetParameters(File_Archive_Status_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[4];
           
			
        

        parms[0] = new SqlParameter(File_Archive_Status_DT.Enum_File_Archive_Status_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(File_Archive_Status_DT.Enum_File_Archive_Status_DT.pmp_id.ToString(), obj.pmp_id);

        parms[2] = new SqlParameter(File_Archive_Status_DT.Enum_File_Archive_Status_DT.file_id.ToString(), obj.file_id);

        parms[3] = new SqlParameter(File_Archive_Status_DT.Enum_File_Archive_Status_DT.status.ToString(), obj.status);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(File_Archive_Status_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "File_Archive_Status_Save", parms);

             	    obj.id = Convert.ToInt32(parms[0].Value) ; 

           return obj.id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int File_Archive_Status_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "File_Archive_Status_Delete", File_Archive_Status_ID);
                return File_Archive_Status_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "File_Archive_Status_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static DataTable Select_BYFileID(int file_id)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "File_Archive_Status_Select_BYFileID", file_id).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }
        public static File_Archive_Status_DT SelectByID(int File_Archive_Status_ID)
        {
            try
            {
              if (File_Archive_Status_ID > 0)
                {
                SqlDataReader drTableName;
                File_Archive_Status_DT oInfo_File_Archive_Status_DT = new File_Archive_Status_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "File_Archive_Status_Select", File_Archive_Status_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_File_Archive_Status_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_File_Archive_Status_DT;
               }
                else
                    return new File_Archive_Status_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

